version: '3'
services:

  db:
    container_name: postgres
#    image: postgres:14.1-alpine
    image: 'postgres:latest'
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    network_mode: host
#    networks:
#      - database
    ports:
      - '5432:5432'
    expose:
      - "5432"
    volumes:
      - db:/var/lib/postgresql/data
    restart: always

  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    image: frontend
    network_mode: host
#    networks:
#      - front
#    depends_on:
#      - backend
    restart: always
    volumes:
      - /app/node_modules
      - ./frontend:/app
    hostname: frontend
#    links:
#      - backend
    ports:
      - '3000:3000'
    command: npm start
#    command: ["./wait-for-it/wait-for-it.sh", "backend:3001", "--", "npm",  "start"]


  backend:
    container_name: backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: backend
    network_mode: host
#    networks:
#      - database
#      - front
#    depends_on:
#      - db
#    environment:
#      DB_HOST: host.docker.internal
#      DB_USER: postgres
#      DB_PASS: postgres
#      SEQ_DB: postgres
#      SEQ_USER: postgres
#      SEQ_PW: postgres
#      PORT: 5432
#      DATABASE_URL: postgres://postgres:postgres@db:5432/postgres
    restart: always
    hostname: backend
#    links:
#      - db
    ports:
      - '3001:3001'
#    command: ["./wait.sh", "db", "npm", "start"]
    command: npm start dev
#    command: ["./wait-for-it/wait-for-it.sh", "db:5432", "--", "npm",  "start"]

#networks:
#  front:
#    driver: bridge
#    driver_opts:
#      com.docker.network.enable_ipv6: "true"
#  database:
#    driver: bridge
#    driver_opts:
#      com.docker.network.enable_ipv6: "true"

volumes:
  db:
