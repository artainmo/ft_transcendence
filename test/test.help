version: '3'
services:

 # db:
 #   image: postgres:14.1-alpine
 #   restart: always
 #   environment:
 #     - POSTGRES_USER=postgres
 #     - POSTGRES_PASSWORD=postgres
 #   ports:
 #     - '5432:5432'
 #   volumes:
 #     - db:/var/lib/postgresql/data
 #     - ./db/init.sql:/docker-entrypoint-initdb.d/create_tables.sql
 #   networks:
 #     - app-network

  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    image: frontend
    restart: always
    volumes:
      - /app/node_modules
      - ./frontend:/app
    hostname: frontend
#    depends_on:
#      - db
    ports:
      - '3000:3000'
#    environment:
#      NODE_ENV: production
#      DB_HOST: db
#      DB_PORT: 5432
#      DB_USER: postgres
#      DB_PASSWORD: postgres
#      DB_NAME: postgres
#    links:
#      - db
    command: npm start pm2

  backend:
    container_name: backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: backend
    restart: always
    hostname: backend
#    ports:
#      - '3000:3000'
    environment:
     - PGUSER=admin
     - PGPASSWORD=admin
     - PGDATABASE=defaultdb
     - PGHOST=db
    depends_on:
      - db
#    environment:
#      DB_HOST: db
#      DB_USER: postgres
#      DB_PASSWORD: postgres
#      DB_NAME: postgres
#    links:
#      - db
    command: npm start pm2 dev

  db:
    container_name: db
    image: 'postgres:12'
    restart: always
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=defaultdb
    volumes:
      - db-data:/var/lib/postgresql/data

volumes:
  db-data: {}
#networks:
#  app-network:
#    driver: bridge
