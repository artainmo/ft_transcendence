{"ast":null,"code":"import chatChannelsClass from \"./chatChannelsClass\";\nconst dataBaseAccounts = [[\"artainmo\", 'pass4', \"online\"], //In the real database those should be accountType[]\n[\"ymanzi\", 'pass3', \"offline\"], [\"gkiss\", 'pass2', \"online\"], [\"cochapel\", 'pass1', \"offline\"], [\"cochapelis\", \"123\", 'game']];\nconst dataBaseChannels = [new chatChannelsClass(\"channel\", \"public\", null, \"warriors\", [], \"georges\", [{\n  name: \"georges\",\n  administrator: true,\n  mute: false\n}, {\n  name: \"jan\",\n  administrator: true,\n  mute: false\n}, {\n  name: \"Jo\",\n  administrator: false,\n  mute: false\n}]), new chatChannelsClass(\"channel\", \"private\", null, \"teambg\", [], \"joa\", [{\n  name: \"joa\",\n  administrator: true,\n  mute: false\n}, {\n  name: \"jan\",\n  administrator: true,\n  mute: false\n}, {\n  name: \"Jo\",\n  administrator: false,\n  mute: false\n}]), new chatChannelsClass(\"channel\", \"password\", \"secret\", \"secrets\", [], \"ella\", [{\n  name: \"ella\",\n  administrator: true,\n  mute: false\n}, {\n  name: \"jan\",\n  administrator: true,\n  mute: false\n}, {\n  name: \"Jo\",\n  administrator: false,\n  mute: false\n}])];\nconst dataBaseGames = [{\n  ballSpeed: 1,\n  map: 'dark',\n  players: [\"Georges\", null]\n}, {\n  ballSpeed: 2,\n  map: 'white',\n  players: [\"joa\", null]\n}, {\n  ballSpeed: 3,\n  map: 'winter',\n  players: [\"ella\", null]\n}];\nexport { dataBaseAccounts, dataBaseChannels, dataBaseGames }; //In relational databases make sure the Accounts and channels overlap so that if one is changed the other is changed too (as account contains channels and vice versa)","map":{"version":3,"sources":["/Users/arthurtainmont/Documents/programming/ft_transcendence/frontend/src/types/database.tsx"],"names":["chatChannelsClass","dataBaseAccounts","dataBaseChannels","name","administrator","mute","dataBaseGames","ballSpeed","map","players"],"mappings":"AAAA,OAAOA,iBAAP,MAA8B,qBAA9B;AAEA,MAAMC,gBAAgB,GAAG,CAAC,CAAC,UAAD,EAAa,OAAb,EAAsB,QAAtB,CAAD,EAAkC;AACjC,CAAC,QAAD,EAAW,OAAX,EAAoB,SAApB,CADD,EAEC,CAAC,OAAD,EAAU,OAAV,EAAmB,QAAnB,CAFD,EAGC,CAAC,UAAD,EAAa,OAAb,EAAsB,SAAtB,CAHD,EAIC,CAAC,YAAD,EAAe,KAAf,EAAsB,MAAtB,CAJD,CAAzB;AAMA,MAAMC,gBAAgB,GAAG,CAAC,IAAIF,iBAAJ,CAAsB,SAAtB,EAAiC,QAAjC,EAA2C,IAA3C,EAAiD,UAAjD,EAA6D,EAA7D,EAAiE,SAAjE,EAA4E,CAAC;AAACG,EAAAA,IAAI,EAAE,SAAP;AAAkBC,EAAAA,aAAa,EAAE,IAAjC;AAAuCC,EAAAA,IAAI,EAAE;AAA7C,CAAD,EAAsD;AAACF,EAAAA,IAAI,EAAE,KAAP;AAAcC,EAAAA,aAAa,EAAE,IAA7B;AAAkCC,EAAAA,IAAI,EAAE;AAAxC,CAAtD,EAAsG;AAACF,EAAAA,IAAI,EAAE,IAAP;AAAaC,EAAAA,aAAa,EAAE,KAA5B;AAAkCC,EAAAA,IAAI,EAAE;AAAxC,CAAtG,CAA5E,CAAD,EACC,IAAIL,iBAAJ,CAAsB,SAAtB,EAAiC,SAAjC,EAA4C,IAA5C,EAAkD,QAAlD,EAA4D,EAA5D,EAAgE,KAAhE,EAAuE,CAAC;AAACG,EAAAA,IAAI,EAAE,KAAP;AAAcC,EAAAA,aAAa,EAAE,IAA7B;AAAkCC,EAAAA,IAAI,EAAE;AAAxC,CAAD,EAAiD;AAACF,EAAAA,IAAI,EAAE,KAAP;AAAcC,EAAAA,aAAa,EAAE,IAA7B;AAAkCC,EAAAA,IAAI,EAAE;AAAxC,CAAjD,EAAiG;AAACF,EAAAA,IAAI,EAAE,IAAP;AAAaC,EAAAA,aAAa,EAAE,KAA5B;AAAkCC,EAAAA,IAAI,EAAE;AAAxC,CAAjG,CAAvE,CADD,EAEC,IAAIL,iBAAJ,CAAsB,SAAtB,EAAiC,UAAjC,EAA6C,QAA7C,EAAuD,SAAvD,EAAkE,EAAlE,EAAsE,MAAtE,EAA8E,CAAC;AAACG,EAAAA,IAAI,EAAE,MAAP;AAAeC,EAAAA,aAAa,EAAE,IAA9B;AAAmCC,EAAAA,IAAI,EAAE;AAAzC,CAAD,EAAkD;AAACF,EAAAA,IAAI,EAAE,KAAP;AAAcC,EAAAA,aAAa,EAAE,IAA7B;AAAkCC,EAAAA,IAAI,EAAE;AAAxC,CAAlD,EAAkG;AAACF,EAAAA,IAAI,EAAE,IAAP;AAAaC,EAAAA,aAAa,EAAE,KAA5B;AAAkCC,EAAAA,IAAI,EAAE;AAAxC,CAAlG,CAA9E,CAFD,CAAzB;AAIA,MAAMC,aAAa,GAAG,CAAC;AAACC,EAAAA,SAAS,EAAE,CAAZ;AAAeC,EAAAA,GAAG,EAAE,MAApB;AAA4BC,EAAAA,OAAO,EAAE,CAAC,SAAD,EAAY,IAAZ;AAArC,CAAD,EAA0D;AAACF,EAAAA,SAAS,EAAE,CAAZ;AAAeC,EAAAA,GAAG,EAAE,OAApB;AAA6BC,EAAAA,OAAO,EAAE,CAAC,KAAD,EAAQ,IAAR;AAAtC,CAA1D,EAAgH;AAACF,EAAAA,SAAS,EAAE,CAAZ;AAAeC,EAAAA,GAAG,EAAE,QAApB;AAA8BC,EAAAA,OAAO,EAAE,CAAC,MAAD,EAAS,IAAT;AAAvC,CAAhH,CAAtB;AAEA,SAASR,gBAAT,EAA2BC,gBAA3B,EAA6CI,aAA7C,G,CAGA","sourcesContent":["import chatChannelsClass from \"./chatChannelsClass\";\n\nconst dataBaseAccounts = [[\"artainmo\", 'pass4', \"online\"], //In the real database those should be accountType[]\n                          [\"ymanzi\", 'pass3', \"offline\"],\n                          [\"gkiss\", 'pass2', \"online\"],\n                          [\"cochapel\", 'pass1', \"offline\"],\n                          [\"cochapelis\", \"123\", 'game']];\n\nconst dataBaseChannels = [new chatChannelsClass(\"channel\", \"public\", null, \"warriors\", [], \"georges\", [{name: \"georges\", administrator: true, mute: false}, {name: \"jan\", administrator: true,mute: false}, {name: \"Jo\", administrator: false,mute: false}]),\n                          new chatChannelsClass(\"channel\", \"private\", null, \"teambg\", [], \"joa\", [{name: \"joa\", administrator: true,mute: false}, {name: \"jan\", administrator: true,mute: false}, {name: \"Jo\", administrator: false,mute: false}]),\n                          new chatChannelsClass(\"channel\", \"password\", \"secret\", \"secrets\", [], \"ella\", [{name: \"ella\", administrator: true,mute: false}, {name: \"jan\", administrator: true,mute: false}, {name: \"Jo\", administrator: false,mute: false}])];\n\nconst dataBaseGames = [{ballSpeed: 1, map: 'dark', players: [\"Georges\", null]}, {ballSpeed: 2, map: 'white', players: [\"joa\", null]}, {ballSpeed: 3, map: 'winter', players: [\"ella\", null]}];\n\nexport { dataBaseAccounts, dataBaseChannels, dataBaseGames }\n\n\n//In relational databases make sure the Accounts and channels overlap so that if one is changed the other is changed too (as account contains channels and vice versa)\n"]},"metadata":{},"sourceType":"module"}