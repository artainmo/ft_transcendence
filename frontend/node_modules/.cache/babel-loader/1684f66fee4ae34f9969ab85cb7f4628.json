{"ast":null,"code":"var _jsxFileName = \"/Users/arthurtainmont/Documents/programming/ft_transcendence/frontend/src/pages/userAccount/profile.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { MdOutlinePersonOutline } from \"react-icons/md\";\nimport { dataBaseAccounts } from '../../types/database';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet g_copyAccount;\n\nconst FindFriends = _ref => {\n  _s();\n\n  let {\n    account,\n    changeAccount\n  } = _ref;\n  const [searchResults, setSearchResults] = useState([]);\n  const [searchText, setSearchText] = useState('');\n\n  const handleSearch = searchValue => {\n    let searchResults = [];\n    dataBaseAccounts.forEach(item => searchValue.length !== 0 && !account.friends.includes(item) && item[0].includes(searchValue) && item[0] !== account.name && searchResults.push(item));\n    setSearchText(searchValue);\n    setSearchResults(searchResults);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: searchText,\n      onChange: e => handleSearch(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 99\n    }, this), searchResults.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 45\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: item[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 45\n      }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: \"\\xA0\\xA0\\xA0\"\n      }, void 0, false), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => {\n          let tmp = account.friends;\n          tmp.push(item);\n          changeAccount({\n            friends: tmp\n          });\n          handleSearch(\"\");\n        },\n        children: \"Add Friend\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 45\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 42\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 11\n  }, this);\n};\n\n_s(FindFriends, \"Nj8VoPpcPZp8xseVDavguDPMJJ0=\");\n\n_c = FindFriends;\n\nconst Friends = _ref2 => {\n  let {\n    account,\n    changeAccount,\n    changeAccountOwner,\n    ownAccount\n  } = _ref2;\n\n  const seeFriendProfile = friendInfo => {\n    g_copyAccount = account;\n    changeAccountOwner();\n    changeAccount({\n      name: friendInfo[0],\n      password: '',\n      avatar: null,\n      victories: 0,\n      losses: 0,\n      matchHistory: [],\n      friends: []\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Friends\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), account.friends.length ? account.friends.map(elem => /*#__PURE__*/_jsxDEV(\"p\", {\n      onClick: () => seeFriendProfile(elem),\n      children: `${elem[0]}: ${elem[2]}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 69\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No friends\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 143\n    }, this), ownAccount && /*#__PURE__*/_jsxDEV(FindFriends, {\n      account: account,\n      changeAccount: changeAccount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 28\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 11\n  }, this);\n};\n\n_c2 = Friends;\n\nconst Profile = _ref3 => {\n  _s2();\n\n  let {\n    account,\n    changeAccount,\n    unlog\n  } = _ref3;\n  const [ownAccount, setOwnAccount] = useState(true);\n\n  const changeAccountOwner = () => {\n    setOwnAccount(!ownAccount);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [ownAccount && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        unlog();\n      },\n      children: \"Log out\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 30\n    }, this), !ownAccount && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          /*backToPage(\"profile\");*/\n          changeAccount(g_copyAccount);\n          changeAccountOwner();\n        },\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: \"\\xA0\\xA0\\xA0\"\n      }, void 0, false)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }, this), account.avatar ? /*#__PURE__*/_jsxDEV(\"img\", {\n      src: account.avatar,\n      alt: \"avatar\",\n      height: \"50em\",\n      width: \"50em\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 33\n    }, this) : /*#__PURE__*/_jsxDEV(MdOutlinePersonOutline, {\n      size: \"3em\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 105\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Name: \", account.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Stats\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Victories: \", account.victories]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Losses: \", account.losses]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Ratio: \", account.victories / account.losses ? account.victories / account.losses : 0]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Match History\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 15\n    }, this), account.matchHistory.length ? account.matchHistory.map(elem => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: elem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 79\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No matches\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 96\n    }, this), /*#__PURE__*/_jsxDEV(Friends, {\n      account: account,\n      changeAccount: changeAccount,\n      changeAccountOwner: changeAccountOwner,\n      ownAccount: ownAccount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 11\n  }, this);\n};\n\n_s2(Profile, \"qk5F6VIzxcV5wa3VRAyc7CKONuM=\");\n\n_c3 = Profile;\nexport default Profile;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"FindFriends\");\n$RefreshReg$(_c2, \"Friends\");\n$RefreshReg$(_c3, \"Profile\");","map":{"version":3,"sources":["/Users/arthurtainmont/Documents/programming/ft_transcendence/frontend/src/pages/userAccount/profile.tsx"],"names":["React","useState","MdOutlinePersonOutline","dataBaseAccounts","g_copyAccount","FindFriends","account","changeAccount","searchResults","setSearchResults","searchText","setSearchText","handleSearch","searchValue","forEach","item","length","friends","includes","name","push","e","target","value","map","tmp","Friends","changeAccountOwner","ownAccount","seeFriendProfile","friendInfo","password","avatar","victories","losses","matchHistory","elem","Profile","unlog","setOwnAccount"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport accountType from '../../types/accountType';\nimport { MdOutlinePersonOutline } from \"react-icons/md\";\nimport { dataBaseAccounts } from '../../types/database';\n\nlet g_copyAccount: accountType;\n\ninterface profileProps2 {\n\taccount: accountType\n\tchangeAccount: (newAccount: any) => void\n}\n\ninterface profileProps {\n\taccount: accountType\n\tchangeAccount: (newAccount: any) => void\n\tunlog: () => void\n}\n\ninterface FriendsProps {\n  account: accountType\n  changeAccount: (newAccount: any) => void\n  changeAccountOwner: () => void\n  ownAccount: boolean\n}\n\nconst FindFriends: React.FC<profileProps2> = ({ account, changeAccount }) => {\n  const [searchResults, setSearchResults] = useState<string[][]>([]);\n  const [searchText, setSearchText] = useState<string>('');\n\n  const handleSearch: (searchValue: string) => void = (searchValue) => {\n    let searchResults: string[][] = [];\n\n    dataBaseAccounts.forEach((item) => searchValue.length !== 0 && !account.friends.includes(item)\n                              && item[0].includes(searchValue) && item[0] !== account.name && searchResults.push(item))\n    setSearchText(searchValue);\n    setSearchResults(searchResults);\n  }\n\n  return (<div>\n            <input type=\"text\" value={searchText} onChange={(e) => handleSearch(e.target.value)}/><br/>\n            {searchResults.map((item) => <div>\n                                            <br/>\n                                            <span>{item[0]}</span><>&nbsp;&nbsp;&nbsp;</>\n                                            <button onClick={(e)=> {\n                                                                    let tmp = account.friends;\n                                                                    tmp.push(item);\n                                                                    changeAccount({friends: tmp});\n                                                                    handleSearch(\"\");}}>Add Friend</button>\n                                         </div>)}\n          </div>);\n}\n\nconst Friends: React.FC<FriendsProps> = ({ account, changeAccount, changeAccountOwner, ownAccount }) => {\n\n  const seeFriendProfile: (friendInfo: string[]) => void = (friendInfo) => {\n    g_copyAccount = account;\n    changeAccountOwner();\n    changeAccount({name: friendInfo[0], password: '', avatar: null, victories: 0, losses: 0, matchHistory: [], friends: []});\n  }\n\n  return (<div>\n            <h3>Friends</h3>\n            {account.friends.length ? account.friends.map((elem) => <p onClick={()=>seeFriendProfile(elem)}>{`${elem[0]}: ${elem[2]}`}</p>) : <p>No friends</p>}\n            {ownAccount && <FindFriends account={account} changeAccount={changeAccount}/>}\n          </div>);\n}\n\nconst Profile: React.FC<profileProps> = ({ account, changeAccount, unlog }) => {\n  const [ownAccount, setOwnAccount] = useState<boolean>(true);\n\n  const changeAccountOwner: () => void = () => {\n    setOwnAccount(!ownAccount);\n  }\n\n  return (<div>\n              {/* {ownAccount && <><button onClick={()=>{backToPage(\"home\")}}>Back</button><>&nbsp;&nbsp;&nbsp;</></>} */}\n              {ownAccount && <button onClick={()=>{unlog()}}>Log out</button>}\n              {!ownAccount && <><button onClick={()=>{/*backToPage(\"profile\");*/ changeAccount(g_copyAccount); changeAccountOwner();}}>Back</button><>&nbsp;&nbsp;&nbsp;</></>}\n              <h1>Profile</h1>\n              {account.avatar ? <img src={account.avatar} alt={\"avatar\"} height='50em' width='50em'/> : <MdOutlinePersonOutline size='3em'/>}\n              <p>Name: {account.name}</p>\n              <h3>Stats</h3>\n              <p>Victories: {account.victories}</p>\n              <p>Losses: {account.losses}</p>\n              <p>Ratio: {(account.victories / account.losses) ? (account.victories / account.losses) : 0}</p>\n              <h3>Match History</h3>\n              {account.matchHistory.length ? account.matchHistory.map((elem)=><p>{elem}</p>) : <p>No matches</p>}\n              <Friends account={account} changeAccount={changeAccount} changeAccountOwner={changeAccountOwner} ownAccount={ownAccount}/>\n          </div>);\n}\n\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}