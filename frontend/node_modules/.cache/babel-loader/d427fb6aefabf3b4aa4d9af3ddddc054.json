{"ast":null,"code":"var _jsxFileName = \"/Users/arthurtainmont/Documents/programming/ft_transcendence/frontend/src/pages/chat/chat.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { dataBaseAccounts } from '../../types/database'; // import { dataBaseChannels } from '../../types/database';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AddUsers = _ref => {\n  _s();\n\n  let {\n    account,\n    changeAccount,\n    chatIndex\n  } = _ref;\n  const [searchResults, setSearchResults] = useState([]);\n  const [searchText, setSearchText] = useState('');\n\n  const handleSearch = searchValue => {\n    let searchResults = [];\n    dataBaseAccounts.forEach(item => searchValue.length !== 0 && !account.chatChannels[chatIndex].users.find(elem => elem.name === item[0]) && item[0].includes(searchValue) && item[0] !== account.name && searchResults.push(item));\n    setSearchText(searchValue);\n    setSearchResults(searchResults);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Add users: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: searchText,\n      onChange: e => handleSearch(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 99\n    }, this), searchResults.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 45\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: item[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 45\n      }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: \"\\xA0\\xA0\\xA0\"\n      }, void 0, false), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => {\n          let tmp = account.chatChannels;\n          tmp[chatIndex].users.push({\n            name: item[0],\n            administrator: false,\n            mute: false\n          });\n          changeAccount({\n            chatChannels: tmp\n          });\n          handleSearch(\"\");\n        },\n        children: \"Add User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 45\n      }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: \"\\xA0\\xA0\\xA0\"\n      }, void 0, false), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => {\n          let tmp = account.chatChannels;\n          tmp[chatIndex].users.push({\n            name: item[0],\n            administrator: true,\n            mute: false\n          });\n          changeAccount({\n            chatChannels: tmp\n          });\n          handleSearch(\"\");\n        },\n        children: \"Add administrator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 42\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 11\n  }, this);\n};\n\n_s(AddUsers, \"Nj8VoPpcPZp8xseVDavguDPMJJ0=\");\n\n_c = AddUsers;\n\nconst ChannelInfo = _ref2 => {\n  _s2();\n\n  let {\n    account,\n    changeAccount,\n    chatIndex\n  } = _ref2;\n  const [info, setInfo] = useState(false);\n  const [viewUsers, setViewUsers] = useState(false);\n  const [settings, setSettings] = useState(false);\n  const [specific, setSpecific] = useState('');\n  const [password, setPassword] = useState('');\n\n  const changeSpecific = newValue => {\n    setSpecific(newValue);\n  };\n\n  const resetSettings = () => {\n    setPassword('');\n    changeSpecific('');\n  };\n\n  const onSubmitChannel = () => {\n    let tmp = account.chatChannels; // let channelIndex = dataBaseChannels.findIndex((item)=>(item.name === account.chatChannels[chatIndex].name));\n\n    if (specific === \"password\" && password === '') {\n      return;\n    }\n\n    tmp[chatIndex].specific = specific;\n    tmp[chatIndex].password = password; // dataBaseChannels[channelIndex].specific = specific;\n    // dataBaseChannels[channelIndex].password = password;\n\n    changeAccount({\n      chatChannels: tmp\n    });\n    setSettings(false);\n    resetSettings();\n  };\n\n  const changeAdmin = UserIndex => {\n    let tmp = account.chatChannels; // let channelIndex = dataBaseChannels.findIndex((item)=>(item.name === account.chatChannels[chatIndex].name));\n    // dataBaseAccounts[channelIndex].users[UserIndex].administrator = !dataBaseAccounts[channelIndex].users[UserIndex].administrator;\n\n    tmp[chatIndex].users[UserIndex].administrator = !tmp[chatIndex].users[UserIndex].administrator;\n    changeAccount({\n      chatChannels: tmp\n    });\n  };\n\n  const ban = UserIndex => {\n    let tmp = account.chatChannels; // let channelIndex = dataBaseChannels.findIndex((item)=>(item.name === account.chatChannels[chatIndex].name));\n    // dataBaseAccounts[channelIndex].users = dataBaseAccounts[channelIndex].users.filter((item, index)=>index !== UserIndex);\n\n    tmp[chatIndex].users = tmp[chatIndex].users.filter((item, index) => index !== UserIndex);\n    changeAccount({\n      chatChannels: tmp\n    });\n  };\n\n  const mute = UserIndex => {\n    let tmp = account.chatChannels; // let channelIndex = dataBaseChannels.findIndex((item)=>(item.name === account.chatChannels[chatIndex].name));\n    // dataBaseAccounts[channelIndex].users[UserIndex].mute = !dataBaseAccounts[channelIndex].users[UserIndex].mute;\n\n    tmp[chatIndex].users[UserIndex].mute = !tmp[chatIndex].users[UserIndex].mute;\n    changeAccount({\n      chatChannels: tmp\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setInfo(!info);\n        setSettings(false);\n        setViewUsers(false);\n        resetSettings();\n      },\n      children: \"Channel Info\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"\\xA0\\xA0\\xA0\"\n    }, void 0, false), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setViewUsers(!viewUsers);\n        setSettings(false);\n        setInfo(false);\n        resetSettings();\n      },\n      children: \"Users\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"\\xA0\\xA0\\xA0\"\n    }, void 0, false), account.chatChannels[chatIndex].owner === account.name && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setSettings(!settings);\n        setInfo(false);\n        setViewUsers(false);\n        resetSettings();\n      },\n      children: \"Settings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 73\n    }, this), info && /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: `Type: ${account.chatChannels[chatIndex].specific}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: `Owner: ${account.chatChannels[chatIndex].owner}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 23\n      }, this), account.chatChannels[chatIndex].specific === \"password\" && /*#__PURE__*/_jsxDEV(\"li\", {\n        children: `Password: ${account.chatChannels[chatIndex].password}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 84\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: account.chatChannels[chatIndex].users.find(elem => elem.name === account.name).administrator ? \"You have administrator rights in this channel\" : \"You have no rights in this channel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 22\n    }, this), viewUsers && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(AddUsers, {\n        account: account,\n        changeAccount: changeAccount,\n        chatIndex: chatIndex\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: account.chatChannels[chatIndex].users.length === 1 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No other users\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 70\n        }, this) : account.chatChannels[chatIndex].users.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: item.name !== account.name && /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [item.name + \" --- \" + (item.administrator ? \"administrator\" : \"user\") + (item.mute ? \" --- mute   \" : \"   \"), account.chatChannels[chatIndex].owner === account.name && /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: e => changeAdmin(index),\n                children: \"Change Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 183\n              }, this), account.chatChannels[chatIndex].users.find(elem => elem.name === account.name).administrator && /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: e => ban(index),\n                children: \"Ban\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 222\n              }, this), account.chatChannels[chatIndex].users.find(elem => elem.name === account.name).administrator && /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: e => mute(index),\n                children: item.mute ? \"Unmute\" : \"mute\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 222\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 154\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 108\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true), settings && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 32\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"public\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        name: \"specific\",\n        value: \"on\",\n        onChange: () => changeSpecific(\"public\"),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: \"\\xA0\\xA0\\xA0\"\n      }, void 0, false), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"private\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        name: \"specific\",\n        onChange: () => changeSpecific(\"private\"),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: \"\\xA0\\xA0\\xA0\"\n      }, void 0, false), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        name: \"specific\",\n        onChange: () => changeSpecific(\"password\"),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 114\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 119\n      }, this), specific === \"password\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 57\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 151\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 156\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        onClick: () => onSubmitChannel()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 11\n  }, this);\n};\n\n_s2(ChannelInfo, \"tL5xdzNa8La5VzuZNiuLZfLr+1k=\");\n\n_c2 = ChannelInfo;\n\nconst Message = _ref3 => {\n  _s3();\n\n  let {\n    account,\n    changeAccount,\n    chatIndex,\n    block\n  } = _ref3;\n  const [message, setMessage] = useState('');\n\n  const changeMessage = newMessage => {\n    setMessage(newMessage);\n  };\n\n  const submitMessage = () => {\n    let tmp = account.chatChannels;\n    tmp[chatIndex].history.push({\n      name: account.name,\n      message: message\n    });\n    changeAccount({\n      chatChannels: tmp\n    });\n    changeMessage('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [account.chatChannels[chatIndex].history.map(elem => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: `${elem.name} --- ${elem.message}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 67\n    }, this)), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: message,\n      onChange: e => changeMessage(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }, this), block !== \"block\" ? /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"Message\",\n      onClick: e => submitMessage()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 34\n    }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"Message\",\n      onClick: e => submitMessage(),\n      disabled: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 35\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 11\n  }, this);\n};\n\n_s3(Message, \"l8KXAebGu4sZHsyCIQX7P8si41w=\");\n\n_c3 = Message;\n\nconst Chat = _ref4 => {\n  let {\n    account,\n    changeAccount,\n    backToPage,\n    chatIndex,\n    changeChat\n  } = _ref4;\n  let dm;\n  account.chatChannels[chatIndex].dmOrChannel === \"dm\" ? dm = true : dm = false;\n\n  const back = () => {\n    changeChat(null); // backToPage(\"chat\");\n  };\n\n  const setBlock = () => {\n    let tmp = account.chatChannels;\n    tmp[chatIndex].specific === \"non-block\" ? tmp[chatIndex].specific = \"block\" : tmp[chatIndex].specific = \"non-block\";\n    changeAccount({\n      chatChannels: tmp\n    });\n  };\n\n  const leaveChannel = () => {\n    let tmp = account.chatChannels; // let channelIndex = dataBaseChannels.findIndex((item)=>(item.name === account.chatChannels[chatIndex].name));\n    // dataBaseChannels[channelIndex].users = dataBaseChannels[channelIndex].users.filter((item)=>item.name !== account.name);\n    // if (dataBaseChannels[channelIndex].users.length === 0) {\n    //   dataBaseChannels.filter((item, index)=> index !== channelIndex);\n    // } else {\n    //   dataBaseChannels[channelIndex].owner = dataBaseChannels[channelIndex].users[0];\n    //   dataBaseChannels[channelIndex].users[0].administrator = true;\n    // }\n\n    tmp = tmp.filter(item => item.name !== tmp[chatIndex].name || item.dmOrChannel === \"dm\");\n    changeAccount({\n      chatChannels: tmp\n    });\n    back();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => back(),\n      children: \"Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 13\n    }, this), dm && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setBlock(),\n      children: account.chatChannels[chatIndex].specific === \"non-block\" ? \"Block\" : \"Unblock\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 20\n    }, this), !dm && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n        children: \"\\xA0\\xA0\\xA0\"\n      }, void 0, false), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => leaveChannel(),\n        children: \"Leave Channel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 46\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: account.chatChannels[chatIndex].name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 13\n    }, this), !dm && /*#__PURE__*/_jsxDEV(ChannelInfo, {\n      account: account,\n      changeAccount: changeAccount,\n      chatIndex: chatIndex\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(Message, {\n      account: account,\n      changeAccount: changeAccount,\n      chatIndex: chatIndex,\n      block: account.chatChannels[chatIndex].specific\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 217,\n    columnNumber: 11\n  }, this);\n};\n\n_c4 = Chat;\nexport default Chat;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"AddUsers\");\n$RefreshReg$(_c2, \"ChannelInfo\");\n$RefreshReg$(_c3, \"Message\");\n$RefreshReg$(_c4, \"Chat\");","map":{"version":3,"sources":["/Users/arthurtainmont/Documents/programming/ft_transcendence/frontend/src/pages/chat/chat.tsx"],"names":["React","useState","dataBaseAccounts","AddUsers","account","changeAccount","chatIndex","searchResults","setSearchResults","searchText","setSearchText","handleSearch","searchValue","forEach","item","length","chatChannels","users","find","elem","name","includes","push","e","target","value","map","tmp","administrator","mute","ChannelInfo","info","setInfo","viewUsers","setViewUsers","settings","setSettings","specific","setSpecific","password","setPassword","changeSpecific","newValue","resetSettings","onSubmitChannel","changeAdmin","UserIndex","ban","filter","index","owner","Message","block","message","setMessage","changeMessage","newMessage","submitMessage","history","Chat","backToPage","changeChat","dm","dmOrChannel","back","setBlock","leaveChannel"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport accountType from '../../types/accountType';\nimport { dataBaseAccounts } from '../../types/database';\n// import { dataBaseChannels } from '../../types/database';\n\n\ninterface chatProps3 {\n\taccount: accountType\n\tchangeAccount: (newAccount: any) => void\n  chatIndex: number\n}\n\ninterface chatProps2 {\n\taccount: accountType\n\tchangeAccount: (newAccount: any) => void\n  chatIndex: number\n  block: string\n}\n\ninterface chatProps {\n\taccount: accountType\n\tchangeAccount: (newAccount: any) => void\n  backToPage?: () => void\n  chatIndex: number\n  changeChat: (newChat: number | null) => void\n  block?: string\n  back?: () => void\n}\n\nconst AddUsers: React.FC<chatProps3> = ({ account, changeAccount, chatIndex }) => {\n  const [searchResults, setSearchResults] = useState<string[][]>([]);\n  const [searchText, setSearchText] = useState<string>('');\n\n  const handleSearch: (searchValue: string) => void = (searchValue) => {\n    let searchResults: string[][] = [];\n\n    dataBaseAccounts.forEach((item) => searchValue.length !== 0 && !account.chatChannels[chatIndex!].users.find((elem)=>elem.name === item[0])\n                              && item[0].includes(searchValue) && item[0] !== account.name && searchResults.push(item))\n    setSearchText(searchValue);\n    setSearchResults(searchResults);\n  }\n\n  return (<div>\n\t\t\t\t\t\t<h3>Add users: </h3>\n            <input type=\"text\" value={searchText} onChange={(e) => handleSearch(e.target.value)}/><br/>\n            {searchResults.map((item) => <div>\n                                            <br/>\n                                            <span>{item[0]}</span><>&nbsp;&nbsp;&nbsp;</>\n                                            <button onClick={(e)=> {\n                                                                    let tmp = account.chatChannels;\n                                                                    tmp[chatIndex].users.push({name: item[0], administrator: false, mute: false});\n                                                                    changeAccount({chatChannels: tmp});\n                                                                    handleSearch(\"\");}}>Add User</button><>&nbsp;&nbsp;&nbsp;</>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button onClick={(e)=> {\n\t\t\t\t\t\t\t\t\t\t\t\t                                           let tmp = account.chatChannels;\n\t\t\t\t\t\t\t\t\t\t\t\t                                           tmp[chatIndex].users.push({name: item[0], administrator: true, mute: false});\n\t\t\t\t\t\t\t\t\t\t\t\t                                           changeAccount({chatChannels: tmp});\n\t\t\t\t\t\t\t\t\t\t\t\t                                           handleSearch(\"\");}}>Add administrator</button>\n                                         </div>)}\n          </div>);\n}\n\nconst ChannelInfo: React.FC<chatProps3> = ({ account, changeAccount, chatIndex }) => {\n  const [info, setInfo] = useState<boolean>(false);\n\tconst [viewUsers, setViewUsers] = useState<boolean>(false);\n  const [settings, setSettings] = useState<boolean>(false);\n  const [specific, setSpecific] = useState<\"non-block\" | \"block\" | \"public\" | \"private\" | \"password\" | ''>('');\n  const [password, setPassword] = useState<string>('');\n\n  const changeSpecific: (newValue: \"non-block\" | \"block\" | \"public\" | \"private\" | \"password\" | '') => void = (newValue) => {\n    setSpecific(newValue)\n  }\n\n  const resetSettings: () => void = () => {\n    setPassword('');\n    changeSpecific('');\n  }\n\n  const onSubmitChannel: () => void = () => {\n    let tmp = account.chatChannels;\n    // let channelIndex = dataBaseChannels.findIndex((item)=>(item.name === account.chatChannels[chatIndex].name));\n\n    if (specific === \"password\" && password === '') {\n      return ;\n    }\n    tmp[chatIndex!].specific = specific;\n    tmp[chatIndex!].password = password;\n    // dataBaseChannels[channelIndex].specific = specific;\n    // dataBaseChannels[channelIndex].password = password;\n    changeAccount({chatChannels: tmp});\n    setSettings(false);\n    resetSettings();\n  }\n\n  const changeAdmin: (UserIndex: number) => void = (UserIndex) => {\n    let tmp = account.chatChannels;\n    // let channelIndex = dataBaseChannels.findIndex((item)=>(item.name === account.chatChannels[chatIndex].name));\n\n    // dataBaseAccounts[channelIndex].users[UserIndex].administrator = !dataBaseAccounts[channelIndex].users[UserIndex].administrator;\n    tmp[chatIndex!].users[UserIndex].administrator = !tmp[chatIndex!].users[UserIndex].administrator;\n    changeAccount({chatChannels: tmp});\n  }\n\n  const ban: (UserIndex: number) => void = (UserIndex) => {\n    let tmp = account.chatChannels;\n    // let channelIndex = dataBaseChannels.findIndex((item)=>(item.name === account.chatChannels[chatIndex].name));\n\n    // dataBaseAccounts[channelIndex].users = dataBaseAccounts[channelIndex].users.filter((item, index)=>index !== UserIndex);\n    tmp[chatIndex!].users = tmp[chatIndex!].users.filter((item, index)=>index !== UserIndex);\n    changeAccount({chatChannels: tmp});\n  }\n\n  const mute: (UserIndex: number) => void = (UserIndex) => {\n    let tmp = account.chatChannels;\n    // let channelIndex = dataBaseChannels.findIndex((item)=>(item.name === account.chatChannels[chatIndex].name));\n\n    // dataBaseAccounts[channelIndex].users[UserIndex].mute = !dataBaseAccounts[channelIndex].users[UserIndex].mute;\n    tmp[chatIndex!].users[UserIndex].mute = !tmp[chatIndex!].users[UserIndex].mute;\n    changeAccount({chatChannels: tmp});\n  }\n\n  return (<div>\n            <button onClick={()=>{setInfo(!info); setSettings(false); setViewUsers(false); resetSettings();}}>Channel Info</button><>&nbsp;&nbsp;&nbsp;</>\n\t\t\t\t\t\t<button onClick={()=>{setViewUsers(!viewUsers); setSettings(false); setInfo(false); resetSettings();}}>Users</button><>&nbsp;&nbsp;&nbsp;</>\n            {account.chatChannels[chatIndex!].owner === account.name && <button onClick={()=>{setSettings(!settings); setInfo(false); setViewUsers(false); resetSettings();}}>Settings</button>}\n            {info && <ul>\n                      <li>{`Type: ${account.chatChannels[chatIndex!].specific}`}</li>\n                      <li>{`Owner: ${account.chatChannels[chatIndex!].owner}`}</li>\n                      {account.chatChannels[chatIndex!].specific === \"password\" && <li>{`Password: ${account.chatChannels[chatIndex].password}`}</li>}\n                      <li>{account.chatChannels[chatIndex!].users.find((elem)=>elem.name === account.name)!.administrator ?\n                          \"You have administrator rights in this channel\" : \"You have no rights in this channel\"}</li>\n                    </ul>}\n            {viewUsers && <>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<AddUsers account={account} changeAccount={changeAccount} chatIndex={chatIndex}/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h3>Users</h3>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{account.chatChannels[chatIndex].users.length === 1 ? <p>No other users</p> :\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taccount.chatChannels[chatIndex].users.map((item, index)=>{return (<div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t                                                                                              {item.name !== account.name && <li>{item.name + \" --- \" + (item.administrator ? \"administrator\" : \"user\") + (item.mute ? \" --- mute   \" : \"   \")}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t                                                                                              {account.chatChannels[chatIndex!].owner === account.name && <button onClick={(e)=>changeAdmin(index)}>Change Status</button>}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t                                                                                              {account.chatChannels[chatIndex!].users.find((elem)=>elem.name === account.name)!.administrator && <button onClick={(e)=>ban(index)}>Ban</button>}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t                                                                                              {account.chatChannels[chatIndex!].users.find((elem)=>elem.name === account.name)!.administrator && <button onClick={(e)=>mute(index)}>{item.mute ? \"Unmute\" : \"mute\"}</button>}</li>}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t                                                                                            </div>);})}\n                      \t    </ul>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</>}\n            {settings && <>\n                          <br/><br/>\n                          <label>public</label>\n                          <input type=\"radio\" name=\"specific\" value=\"on\" onChange={()=>changeSpecific(\"public\")} required/><>&nbsp;&nbsp;&nbsp;</>\n                          <label>private</label>\n                          <input type=\"radio\" name=\"specific\" onChange={()=>changeSpecific(\"private\")} required/><>&nbsp;&nbsp;&nbsp;</>\n                          <label>password</label>\n                          <input type=\"radio\"name=\"specific\" onChange={()=>changeSpecific(\"password\")} required/><br/><br/>\n                          {specific === \"password\" && <><input type=\"password\" value={password} onChange={(e)=>setPassword(e.target.value)} required/><br/><br/></>}\n                          <input type=\"submit\" onClick={()=>onSubmitChannel()}/>\n                          <br/>\n                        </>}\n            <br/><br/>\n          </div>)\n}\n\nconst Message: React.FC<chatProps2> = ({ account, changeAccount, chatIndex, block }) => {\n  const [message, setMessage] = useState<string>('');\n\n  const changeMessage: (newMessage: string) => void = (newMessage) => {\n    setMessage(newMessage);\n  }\n\n  const submitMessage: () => void = () => {\n    let tmp = account.chatChannels;\n\n    tmp[chatIndex].history.push({name: account.name, message: message})\n    changeAccount({chatChannels: tmp});\n    changeMessage('');\n  }\n\n  return (<div>\n            {account.chatChannels[chatIndex].history.map((elem)=> <p>{`${elem.name} --- ${elem.message}`}</p>)}\n            <input type=\"text\" value={message} onChange={(e)=>changeMessage(e.target.value)}/>\n            {block !== \"block\" ? <input type=\"submit\" value=\"Message\" onClick={(e)=>submitMessage()}/>\n                                : <input type=\"submit\" value=\"Message\" onClick={(e)=>submitMessage()} disabled/>}\n          </div>);\n}\n\nconst Chat: React.FC<chatProps> = ({ account, changeAccount, backToPage, chatIndex, changeChat }) => {\n  let dm: boolean;\n  account.chatChannels[chatIndex].dmOrChannel === \"dm\" ? dm = true : dm = false;\n\n  const back: () => void = () => {\n    changeChat(null);\n    // backToPage(\"chat\");\n  }\n\n  const setBlock: () => void = () => {\n    let tmp = account.chatChannels;\n    tmp[chatIndex].specific === \"non-block\" ?\n          tmp[chatIndex].specific = \"block\" : tmp[chatIndex].specific = \"non-block\";\n    changeAccount({chatChannels: tmp});\n  }\n\n  const leaveChannel: () => void = () => {\n    let tmp = account.chatChannels;\n    // let channelIndex = dataBaseChannels.findIndex((item)=>(item.name === account.chatChannels[chatIndex].name));\n\n    // dataBaseChannels[channelIndex].users = dataBaseChannels[channelIndex].users.filter((item)=>item.name !== account.name);\n    // if (dataBaseChannels[channelIndex].users.length === 0) {\n    //   dataBaseChannels.filter((item, index)=> index !== channelIndex);\n    // } else {\n    //   dataBaseChannels[channelIndex].owner = dataBaseChannels[channelIndex].users[0];\n    //   dataBaseChannels[channelIndex].users[0].administrator = true;\n    // }\n    tmp = tmp.filter((item)=> (item.name !== tmp[chatIndex].name || item.dmOrChannel === \"dm\"));\n    changeAccount({chatChannels: tmp});\n    back();\n  }\n\n  return (<div>\n            <button onClick={()=>back()}>Back</button>\n            {dm && <button onClick={()=>setBlock()}>{account.chatChannels[chatIndex].specific === \"non-block\" ? \"Block\" : \"Unblock\"}</button>}\n            {!dm && <><>&nbsp;&nbsp;&nbsp;</><button onClick={()=>leaveChannel()}>Leave Channel</button></>}\n            <h1>{account.chatChannels[chatIndex].name}</h1>\n            {!dm && <ChannelInfo account={account} changeAccount={changeAccount} chatIndex={chatIndex}/>}\n            <Message account={account} changeAccount={changeAccount} chatIndex={chatIndex} block={account.chatChannels[chatIndex].specific}/>\n          </div>);\n}\n\nexport default Chat\n"]},"metadata":{},"sourceType":"module"}